rule copy_figures:
    shell:
        "cp figures/* ~/Documents/ICBABC/figures; "
        "cd ~/Documents/ICBABC; "
        "git pull; "
        "pdflatex main; "
        "git add .; git commit -m figure_update; git push"


rule prey_predator_raw:
    output:
        "raw/prey_predator/model_{model_nr}/seed_{seed}.npz"
    script:
        "producer/prey_predator.py"


rule prey_predator_example_plot:
    input:
        expand("raw/prey_predator/model_{model_nr}/seed_{seed}.npz", model_nr=[1,2], seed=range(5))
    output:
        "figures/all_prey_predator_ground_truth.pdf"
    script:
        "transformer/prey_predator_plot.py"
        
        
rule toy_simulation:
    output:
        "raw/toy:modes={n}.db"
    script:
        "producer/toy_example.py"
        
        
rule modes_nr_particles_over_t:
    input:
        "raw/toy:modes={n}.db"
    output:
        "figures/toy_particles_over_t-modes_{n}.pdf"
    script:
        "plotter/nr_particles_over_t.py"
        
rule kde_fit:
    input:
        "raw/toy:modes={n}.db"
    output:
        "processed/toy-fitted-kde:modes={n}.npz"
    script:
        "transformer/kde_fit.py"
        
        
rule population_over_t:
    input:
        "processed/toy-fitted-kde:modes={n}.npz"
    output:
        "figures/toy_whole_population-modes_{n}.pdf"
    script:
        "plotter/population_over_t.py"

        
rule all_figures:
    input:
        expand("figures/toy_particles_over_t-modes_{n}.pdf", n=[1, 2 ,4])
        + expand("figures/toy_whole_population-modes_{n}.pdf", n=[1, 2 ,4])

        
rule clean_figures:
    shell:
        "rm figures/*.pdf"
